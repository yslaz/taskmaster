#!/bin/bash

echo "üîç Diagn√≥stico de Conectividad PostgreSQL"
echo "=========================================="

# Leer variables de entorno
if [ -f .env ]; then
    export $(grep -v '^#' .env | xargs)
fi

# Extraer componentes de la URL
DB_URL=${DATABASE_URL:-"postgresql://admin:YWRtaW4=@localhost:5432/taskmaster"}
DB_HOST=$(echo $DB_URL | sed -n 's/.*@\([^:]*\):.*/\1/p')
DB_PORT=$(echo $DB_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')
DB_USER=$(echo $DB_URL | sed -n 's/.*\/\/\([^:]*\):.*/\1/p')
DB_NAME=$(echo $DB_URL | sed -n 's/.*\/\([^?]*\).*/\1/p')

echo "üìç Configuraci√≥n:"
echo "   Host: $DB_HOST"
echo "   Puerto: $DB_PORT"
echo "   Usuario: $DB_USER"
echo "   Base de datos: $DB_NAME"
echo ""

# 1. Ping al servidor
echo "üèì Probando conectividad b√°sica..."
if ping -c 3 $DB_HOST > /dev/null 2>&1; then
    echo "‚úÖ Host $DB_HOST es alcanzable"
else
    echo "‚ùå Host $DB_HOST NO es alcanzable"
fi
echo ""

# 2. Probar puerto con netcat/telnet
echo "üîå Probando puerto $DB_PORT..."
if command -v nc > /dev/null; then
    if nc -z -w3 $DB_HOST $DB_PORT; then
        echo "‚úÖ Puerto $DB_PORT est√° abierto"
    else
        echo "‚ùå Puerto $DB_PORT est√° cerrado o bloqueado"
    fi
elif command -v telnet > /dev/null; then
    timeout 3 telnet $DB_HOST $DB_PORT && echo "‚úÖ Puerto conectado" || echo "‚ùå Puerto no disponible"
else
    echo "‚ö†Ô∏è  nc/telnet no disponible para probar puerto"
fi
echo ""

# 3. Probar con psql si est√° disponible
echo "üóÑÔ∏è  Probando conexi√≥n PostgreSQL..."
if command -v psql > /dev/null; then
    PGPASSWORD=${DATABASE_URL#*:*:} psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c "SELECT version();" 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "‚úÖ Conexi√≥n PostgreSQL exitosa"
    else
        echo "‚ùå Conexi√≥n PostgreSQL fall√≥"
    fi
else
    echo "‚ö†Ô∏è  psql no disponible"
fi
echo ""

# 4. Probar con Docker si est√° disponible
echo "üê≥ Probando con Docker..."
if command -v docker > /dev/null; then
    docker run --rm postgres:15 pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "‚úÖ PostgreSQL responde (via Docker)"
    else
        echo "‚ùå PostgreSQL no responde (via Docker)"
    fi
else
    echo "‚ö†Ô∏è  Docker no disponible"
fi
echo ""

echo "üìã Resumen de verificaciones completado"
echo "Si hay problemas, revisa:"
echo "  1. Firewall del servidor"
echo "  2. Configuraci√≥n de Docker"
echo "  3. Variables de entorno"
echo "  4. Credenciales de base de datos"
